/// A developer-friendly MCP (Model Context Protocol) framework for Dart
///
/// This library provides annotations and code generation to make building
/// MCP servers as simple as annotating methods with @MCPTool, @MCPResource,
/// or @MCPPrompt.
///
/// Example usage:
/// ```dart
/// import 'package:dart_mcp/dart_mcp.dart';
///
/// class MyMCPServer extends MCPServer {
///   MyMCPServer() : super(name: 'my-server', version: '1.0.0');
///
///   @MCPTool('greet', description: 'Greet someone')
///   Future<String> greet(String name) async {
///     return 'Hello, $name!';
///   }
/// }
///
/// void main() async {
///   final server = MyMCPServer();
///   server.registerGeneratedHandlers(); // Generated by build_runner
///   await server.start();
/// }
/// ```

// Core exports
export 'src/annotations.dart';
export 'src/server/mcp_server.dart';
export 'src/protocol/types.dart';

// Re-export for generated code
export 'src/protocol/types.dart' show MCPResourceContent;
export 'dart:convert' show jsonEncode;
